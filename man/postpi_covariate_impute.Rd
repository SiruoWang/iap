% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postpi_covariate_impute.R
\name{postpi_covariate_impute}
\alias{postpi_covariate_impute}
\title{postpi_covariate_impute function imputes a binary variable given its predicted probability and other variables to be used in a downstream analysis.
The analysis is then implemented on multiply imputed datasets with the results combined using Rubin's rules.}
\usage{
postpi_covariate_impute(labeled_data, true_var, unlabeled_data, inf_formula)
}
\arguments{
\item{labeled_data}{dataframe that contains labeled dataset for training imputation model}

\item{true_var}{character string; column name of the true binary variable of interest in \code{labeled_data}}

\item{unlabeled_data}{dataframe that contains all the columns in \code{labeled_data} except for \code{true_var}}

\item{inf_formula}{formula describing Cox model of interest; passed to \code{coxph()}, should contain \code{true_var} on the right side}
}
\value{
tibble containing analysis results; point estimates and standard errors on log hazard ratio scale
}
\description{
This function takes in a labeled dataset for training the imputation model containing:
(1) true measurements of a binary variable that is being predicted using ML
(2) predicted probabilities for this binary variable to be calibrated
(3) additional covariates to be used in a downstream analytic model
(4) the outcome of interest in the downstream analytic model
}
\details{
This function also takes in an unlabeled dataset containing all of the same columns, with the exception of the true measurements of the binary variable
The imputation model is fit as a logistic regression model, using the mice package.
}
\examples{

data(EHRdata, package="postpi")
library(tidyverse)
library(survival)
library(mice)

labeled_data <- EHRdata[[1]]
unlabeled_data <- EHRdata[[2]]
inf_formula <- as.formula("Surv(time, status) ~ met_true + age_dx + sex")

res_impute <- postpi_covariate_impute(labeled_data = labeled_data,
                                      true_var = "met_true",
                                      unlabeled_data = unlabeled_data,
                                      inf_formula = inf_formula)


}
